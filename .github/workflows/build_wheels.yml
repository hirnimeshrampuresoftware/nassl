name: Build Wheels

on: [push]
    #branches: [ release ]
  #pull_request:
   # branches: [ release ]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }} for ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macOS-10.15, windows-2016]
        arch: [auto]
        include:
            - os: ubuntu-20.04
              arch: aarch64

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        if: ${{ matrix.arch == 'aarch64' }}
        uses: docker/setup-qemu-action@v1

      - uses: actions/setup-python@v2
        name: Install Python

      - name: Install cibuildwheel
        run: python -m pip install "cibuildwheel<2.4.0"

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_BUILD: "cp37-* cp38-* cp39-* cp310-*"
          CIBW_SKIP: "*-win32 pp* *-musllinux_*"  # Skip win32, PyPy and muslinux32 builds
          # Build wheels for Apple Silicon
          CIBW_ARCHS_MACOS: "x86_64 universal2 arm64"
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          # Build manylinux2014 wheels
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_MANYLINUX_I686_IMAGE: manylinux2014
          # The C libraries (OpenSSL and Zlib) only need to be built once per OS
          # as they are not tied to a specific Python version
          CIBW_BEFORE_ALL_LINUX: "yum install -y python-devel && python -m pip install invoke python-magic && invoke build.deps"
          CIBW_BEFORE_ALL_MACOS: "python -m pip install invoke && invoke build.deps"
          CIBW_BEFORE_ALL_WINDOWS: '"C:\Program Files (x86)\Microsoft Visual Studio\2017\Enterprise\VC\Auxiliary\Build\vcvars64.bat" && python -m pip install invoke && invoke build.deps'
          # However the nassl C extension is by design tied to a specific Python version
          CIBW_BEFORE_BUILD: "python -m pip install invoke && invoke build.nassl"
          CIBW_TEST_REQUIRES: "pytest"
          CIBW_TEST_COMMAND: "python -m pytest {project}/tests"

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
